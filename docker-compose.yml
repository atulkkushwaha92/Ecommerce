version: '3'

services:
  mysql-db:
    image: mysql:8
    container_name: mysql-db-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
        - ./mysql-db/user.sql:/docker-entrypoint-initdb.d/user.sql
    ports:
      - 3306:3306
    networks:
      - ecommerce-network  
      
  common-data-service:
    build:
      context: .
      dockerfile: ./server/common-data-service/Dockerfile-dev
    container_name: common-data-service-container
    restart: always
    depends_on:
      - mysql-db
    environment:
      - DB_HOST=mysql-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_SCHEMA=${DB_SCHEMA}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      - PORT=${COMMON_DATA_SERVICE_PORT}
      - REACT_CLIENT_URL=${REACT_CLIENT_URL}
    links:
      - mysql-db:mysql
    expose:
      - ${COMMON_DATA_SERVICE_PORT}
    ports:
      - ${COMMON_DATA_SERVICE_PORT}:${COMMON_DATA_SERVICE_PORT}
    networks:
      - ecommerce-network

  authentication-service:
    build:
      context: .
      dockerfile: ./server/authentication-service/Dockerfile-dev
    container_name: authentication-service-container
    restart: always
    depends_on:
      - mysql-db
    environment:
      - DB_HOST=mysql-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_SCHEMA=${DB_SCHEMA}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      - PORT=${AUTHENTICATION_SERVICE_PORT}
    links:
      - mysql-db:mysql
    expose:
      - ${AUTHENTICATION_SERVICE_PORT}
    ports:
      - ${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}
    networks:
      - ecommerce-network  
      
  elastic-service:
    build:
      context: .
      dockerfile: ./server/spring-mysql-elastic/Dockerfile
    container_name: spring-mysql-elastic-container
    restart: always
    depends_on:
      - mysql-db
    environment:
      - DB_HOST=mysql-db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_SCHEMA=${DB_SCHEMA}
      - ACTIVE_PROFILE=${ACTIVE_PROFILE}
      - PORT=${SEARCH_SUGGESTION_SERVICE_PORT}
      - CLUSTER_NAME=elastic
      - CLUSTER_NODES=elastic:9300
    links:
      - mysql-db:mysql
    expose:
      - ${SEARCH_SUGGESTION_SERVICE_PORT}
    ports:
      - ${SEARCH_SUGGESTION_SERVICE_PORT}:${SEARCH_SUGGESTION_SERVICE_PORT}
    networks:
      - ecommerce-network

  elasticsearch:
    image: elastic/elasticsearch:6.2.2
    container_name: elastic
    hostname: elastic
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=elastic
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=elastic
      - discovery.type=single-node
    networks:
      - ecommerce-network
      
  ecommerce-react-ui:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: ecommerce-react-ui
    image: atulkkushwaha92/ecommerce-react-ui
    stdin_open: true
    restart: always
    expose:
      - ${REACT_APP_PORT}
    ports:
      - ${REACT_APP_PORT}:${REACT_APP_PORT}
    environment:
      - REACT_APP_COMMON_DATA_SERVICE_PORT=${COMMON_DATA_SERVICE_PORT}
      - REACT_APP_ENVIRONMENT=${REACT_APP_ENVIRONMENT}
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mysql-db
    networks:
      - ecommerce-network
      
networks:
  ecommerce-network:
    driver: bridge      

volumes:
  esdata:
    driver: local