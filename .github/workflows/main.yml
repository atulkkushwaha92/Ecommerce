name: Continuous Integration and Delivery

on:
  push:
    branches: [main]

env:
  #
  WEBSITE_IMAGE: atulkkushwaha92/ecommerce-react-ui
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build the Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: checkout main
        uses: actions/checkout@v3

      - name: Set environment variables to .env
        run: |
          echo "WEBSITE_IMAGE=$(echo ${{env.WEBSITE_IMAGE}} )" >> $GITHUB_ENV
      - name: Log in to Docker
        run: docker login -u ${{secrets.DOCKER_USERNAME }} -p ${{secrets.DOCKER_PASSWORD }} 
      - name: Build images
        run: |
          docker-compose -f docker-compose.yml build
      - name: Push images
        run: |
           docker push ${{ env.WEBSITE_IMAGE }} || true
  checking-secrets:
    name: Checking secrets
    runs-on: ubuntu-latest
    needs: build
    outputs:
      secret_key_exists: ${{steps.check_secrets.outputs.defined}}
    steps:
      - name: Check for Secrets availabilities
        id: check_secrets
        shell: bash
        run: |
          if [[ -n "${{ secrets.PRIVATE_KEY }}" && -n "${{secrets.AWS_EC2_IP_ADDRESS}}" && -n "${{secrets.AWS_HOST_USER}}" ]]; then
            echo "defined=true" >> $GITHUB_OUTPUT;
          else
            echo "defined=false" >> $GITHUB_OUTPUT;
          fi
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: checking-secrets
    if: needs.checking-secrets.outputs.secret_key_exists == 'true'
    steps:
      - name: executing remote ssh commands using ssh key
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ec2-user@3.80.187.214
      - name: Checkout main
        uses: actions/checkout@v2
      - name:  Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME }} -p ${{secrets.DOCKER_PASSWORD }} 
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Docker Pull
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@3.80.187.214 'sudo docker pull ${{ env.WEBSITE_IMAGE }}:latest'
      - name:  Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@3.80.187.214 'sudo docker stop ecommerce-react-ui || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@3.80.187.214 'sudo docker rm ecommerce-react-ui || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@3.80.187.214 'sudo docker-compose -f ./Ecommerce/docker-compose-ci.yml up -d'